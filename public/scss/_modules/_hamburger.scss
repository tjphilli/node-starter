// PURPOSE: Control layout and shifting between widths

$burger-height: 4px;
$burger-color: $tjp-blue;
$margin-top: 8px;
$rotation: 45deg;

.hamburger {
	width: 36px;
  	.hamburger-piece {
    	margin-top: $margin-top;
    	height: 4px; //FF was rendering this improperly
	    .half {
	      width: 50%;
	      float: left;
	      height: $burger-height;
	      background-color: $burger-color;
	      transition: transform 0.3s, background-color 0.3s;
	    }
	    &.top-bun {
	    	margin-top: 0;
	      .left {
	        transform-origin: 0 0;
	      }
	      .right {
	        transform-origin: 20px 0;
	      }
	    }
	    &.bottom-bun {
	      .left {
	        transform-origin: 0 0;
	      }
	      .right {
	        transform-origin: 20px 0;
	      }
	    }
	    &.meat {
	    	.whole {
		        margin: 0 auto;
		        width: 100%;
		        height: $burger-height;
		        background-color: $burger-color;
		        transition: width 0.3s, background-color 0.3s;
	    	}
    	}
    	&.top-bun, &.bottom-bun {
    		&:after {
    			content: "";
    			display: table;
    		}
    	}
  	}
}

.logo-menu.is-toggled .hamburger {
	.half {
		background-color: #fff;
	}
  .top-bun .left.half {
    transform: rotateZ($rotation) scaleX(1.25) translate(4px, -4px);
  }
  .top-bun .right.half {
    transform: rotateZ(-$rotation) scaleX(1.25) translate(-3px, -5px);
  } 
  .bottom-bun .left.half {
    transform: rotateZ(-$rotation) scaleX(1.25) translate(0px, 5px);
  }
  .bottom-bun .right.half {
    transform: rotateZ($rotation) scaleX(1.25) translate(1px, 6px);
  }
  .meat {
    .whole {
      width: 0px;
      background-color: #fff;
    }
  }
}

.logo-menu-menu:hover {
	.half, .whole {
		background-color: mix($tjp-blue, #fff, 60%) !important;
	}
}

.clearf {
  float: none;
  clear: both;
}

